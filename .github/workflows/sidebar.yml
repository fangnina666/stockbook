name: Sync reports_his & Generate _sidebar.md

on:
  schedule:
    - cron: '0 * * * *'   # 每天 00:00 UTC（台灣 08:00）
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync_and_build_sidebar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone public repo (sparse reports_his only)
        run: |
          git clone --depth 1 --filter=blob:none --sparse https://github.com/fangnina666/gitbook.git src
          cd src
          git sparse-checkout set reports_his
          cd ..

      - name: Sync to target reports_his (with delete)
        run: |
          mkdir -p reports_his
          if [ -d src/reports_his ]; then
            rsync -av --delete src/reports_his/ reports_his/
          else
            echo "WARN: src/reports_his not found; leaving reports_his as-is"
          fi
          rm -rf src

      - name: Ensure Docsify essentials (.nojekyll & README.md)
        run: |
          set -euo pipefail
          [ -f .nojekyll ] || touch .nojekyll
          if [ ! -f README.md ]; then
            {
              printf '%s\n' '# 歡迎來到 StockBook'
              printf '%s\n' '- 從左側選擇報告，或前往 [reports_his](#/reports_his/)。'
            } > README.md
          fi

      - name: Generate _sidebar.md from reports_his
        shell: bash
        run: |
          set -euo pipefail
          SIDEBAR_PATH="_sidebar.md"
          echo "Generating ${SIDEBAR_PATH} from reports_his/*.md ..."
          # 依「最後修改時間」排序（新→舊）
          mapfile -t FILES < <(find reports_his -maxdepth 1 -type f -name "*.md" -printf "%T@ %f\n" | sort -nr | awk '{ $1=""; sub(/^ /,""); print }')
          {
            echo "- [首頁](/README.md)"
            echo "- 報告列表"
            if [ ${#FILES[@]} -eq 0 ]; then
              echo "  - （目前沒有檔案）"
            else
              for f in "${FILES[@]}"; do
                title="${f%.md}"
                safe_path="reports_his/${f// /%20}"
                echo "  - [${title}](/${safe_path})"
              done
            fi
          } > "${SIDEBAR_PATH}"
          echo "✅ ${SIDEBAR_PATH} generated."

      - name: Commit and push if changed (reports_his + _sidebar.md + README.md + .nojekyll)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add reports_his/ _sidebar.md README.md .nojekyll || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            TS="$(date -u +'%Y-%m-%d %H:%M:%S') UTC"
            git commit -m "chore: sync reports_his from gitbook & regenerate _sidebar.md at ${TS}"
            git push
          fi
